'''
문제
영선이는 숫자가 쓰여 있는 직사각형 종이를 가지고 있다. 종이는 1×1 크기의 정사각형 칸으로 나누어져 있고, 숫자는 각 칸에 하나씩 쓰여 있다. 행은 위에서부터 아래까지 번호가 매겨져 있고, 열은 왼쪽부터 오른쪽까지 번호가 매겨져 있다.

영선이는 직사각형을 겹치지 않는 조각으로 자르려고 한다. 각 조각은 크기가 세로나 가로 크기가 1인 직사각형 모양이다. 길이가 N인 조각은 N자리 수로 나타낼 수 있다. 가로 조각은 왼쪽부터 오른쪽까지 수를 이어 붙인 것이고, 세로 조각은 위에서부터 아래까지 수를 이어붙인 것이다.

아래 그림은 4×4 크기의 종이를 자른 한 가지 방법이다.



각 조각의 합은 493 + 7160 + 23 + 58 + 9 + 45 + 91 = 7879 이다.

종이를 적절히 잘라서 조각의 합을 최대로 하는 프로그램을 작성하시오.

입력
첫째 줄에 종이 조각의 세로 크기 N과 가로 크기 M이 주어진다. (1 ≤ N, M ≤ 4)

둘째 줄부터 종이 조각이 주어진다. 각 칸에 쓰여 있는 숫자는 0부터 9까지 중 하나이다.

출력
영선이가 얻을 수 있는 점수의 최댓값을 출력한다.

예제 입력 1 
2 3
123
312
예제 출력 1 
435
예제 입력 2 
2 2
99
11
예제 출력 2 
182
예제 입력 3 
4 3
001
010
111
100
예제 출력 3 
1131
예제 입력 4 
1 1
8
예제 출력 4 
8
'''
import sys

input=sys.stdin.readline

N,M=map(int,input().split())
s=[]
for _ in range(N):
    s.append(list(map(int,input().rstrip())))

def count(N,M,s):
    result = 0
    # bit 이동하였으므로 2^N*M, 최대 2^16, 
    # 4x4의 맵에 가로와 세로를 만든다면 가로 0, 세로1 로 표시한다.
    # 배열로 하면 계산이 많기 때문에 0001101 각각에 해당하는 자리를 배열로 보는 것이다.
    # [[0,0],[0,1],[0,2],[1,0],[1,1] ... ] 일렬로 쭉 늘어 뜨려서 보는 것
    for i in range(1<<N*M):
        total = 0
        # 가로의 합 
        for r in range(N):
            r_sum = 0
            for c in range(M):
                # 현재 보는 것이 어느 배열에 해당하는지
                # 가로부터 [0,0] [0,1] [0,2] [0,3] 이렇게 되므로
                check = M * r +c
                # check만큼 이동한 해당 배열이 1이 라면 가로 더하기 x
                if i &(1<<check) ==0:
                    # 이전의 값에서 x10
                    r_sum = r_sum*10 +s[r][c]
                else:
                    total+=r_sum
                    r_sum=0
            # 한줄 계산이 끝나면 그것을 전체에 더하기
            total +=r_sum

        # 세로 합, row를 돌아서 해당하는 column의합
        for c in range(M):
            c_sum =0
            for r in range(N):
                check = M *r +c

                if i & (1<<check)!=0:
                    c_sum = c_sum*10 + s[r][c]
                else:
                    total+=c_sum
                    c_sum =0
            total +=c_sum

        result = max(result,total)
    return result

print(count(N,M,s))

